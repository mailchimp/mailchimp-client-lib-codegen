=begin
{{> api_info}}
=end

require 'json'

module MailchimpMarketing
  class ApiError < StandardError
    attr_reader :status, :type, :title, :detail, :instance, :errors

    attr_reader :response_headers, :response_body

    # Usage examples:
    #   ApiError.new
    #   ApiError.new("message")
    #   ApiError.new(:status => 500, :response_headers => {}, :response_body => "")
    #   ApiError.new(:status => 404, :message => "Not Found")
    def initialize(arguments = nil)
      @arguments = arguments
      return super(@arguments) unless @arguments.is_a?(Hash)

      @arguments.transform_keys!(&:to_sym)

      expand_response_body_into_arguments

      super(@arguments[:title] || @arguments[:message])

      @arguments.each do |key, value|
        instance_variable_set("@#{key}", value)
      end
    end

    private

    def expand_response_body_into_arguments
      @arguments.merge!(parsed_response_body) unless parsed_response_body.nil?
    end

    def parsed_response_body
      @parsed_response_body ||= begin
        parsed_response_body = JSON.parse(@arguments[:response_body]).transform_keys(&:to_sym)

        if parsed_response_body[:errors].is_a?(Array)
          parsed_response_body[:errors].map do |error|
            error.transform_keys!(&:to_sym)
          end
        end

        parsed_response_body
      rescue
        nil
      end
    end

  end
end
